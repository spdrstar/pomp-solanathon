import type { Commitment } from '@solana/web3.js';
import { Operation, OperationHandler } from '@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types';
import { LazyListing, Listing } from '@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/plugins/auctionHouseModule/Listing';
declare const Key: "LoadListingOperation";
/**
 * @group Operations
 * @category Constructors
 */
export declare const loadListingOperation: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").OperationConstructor<LoadListingOperation, "LoadListingOperation", LoadListingInput, Readonly<{
    model: "listing";
    lazy: false;
    auctionHouse: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/plugins/auctionHouseModule/AuctionHouse").AuctionHouse;
    asset: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/plugins/nftModule").SftWithToken | import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/plugins/nftModule").NftWithToken;
    /**
     * @group Operations
     * @category Types
     */
    tradeStateAddress: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").Pda;
    sellerAddress: import("@solana/web3.js").PublicKey;
    bookkeeperAddress: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/utils").Option<import("@solana/web3.js").PublicKey>;
    receiptAddress: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/utils").Option<import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").Pda>;
    /**
     * @group Operations
     * @category Inputs
     */
    purchaseReceiptAddress: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/utils").Option<import("@solana/web3.js").PublicKey>;
    price: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").SplTokenAmount | import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").SolAmount;
    tokens: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").SplTokenAmount;
    createdAt: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").DateTime;
    canceledAt: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/utils").Option<import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").DateTime>;
}>>;
/**
 * @group Operations
 * @category Types
 */
export declare type LoadListingOperation = Operation<typeof Key, LoadListingInput, Listing>;
/**
 * @group Operations
 * @category Inputs
 */
export declare type LoadListingInput = {
    lazyListing: LazyListing;
    loadJsonMetadata?: boolean;
    commitment?: Commitment;
};
/**
 * @group Operations
 * @category Handlers
 */
export declare const loadListingOperationHandler: OperationHandler<LoadListingOperation>;
export {};
