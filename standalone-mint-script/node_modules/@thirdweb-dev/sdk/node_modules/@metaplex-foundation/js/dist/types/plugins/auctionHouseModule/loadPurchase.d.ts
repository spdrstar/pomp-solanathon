import type { Commitment } from '@solana/web3.js';
import { Operation, OperationHandler } from '@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types';
import { Purchase, LazyPurchase } from '@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/plugins/auctionHouseModule/Purchase';
declare const Key: "LoadPurchaseOperation";
/**
 * @group Operations
 * @category Constructors
 */
export declare const loadPurchaseOperation: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").OperationConstructor<LoadPurchaseOperation, "LoadPurchaseOperation", LoadPurchaseInput, Readonly<{
    model: "purchase";
    lazy: false;
    auctionHouse: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/plugins/auctionHouseModule/AuctionHouse").AuctionHouse;
    asset: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/plugins/nftModule").SftWithToken | import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/plugins/nftModule").NftWithToken;
    buyerAddress: import("@solana/web3.js").PublicKey;
    sellerAddress: import("@solana/web3.js").PublicKey;
    bookkeeperAddress: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/utils").Option<import("@solana/web3.js").PublicKey>;
    receiptAddress: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/utils").Option<import("@solana/web3.js").PublicKey>;
    price: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").SplTokenAmount | import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").SolAmount;
    tokens: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").SplTokenAmount;
    createdAt: import("@thirdweb-dev/sdk/node_modules/@metaplex-foundation/js/dist/types/types").DateTime;
}>>;
/**
 * @group Operations
 * @category Types
 */
export declare type LoadPurchaseOperation = Operation<typeof Key, LoadPurchaseInput, Purchase>;
/**
 * @group Operations
 * @category Inputs
 */
export declare type LoadPurchaseInput = {
    lazyPurchase: LazyPurchase;
    loadJsonMetadata?: boolean;
    commitment?: Commitment;
};
/**
 * @group Operations
 * @category Handlers
 */
export declare const loadPurchaseOperationHandler: OperationHandler<LoadPurchaseOperation>;
export {};
