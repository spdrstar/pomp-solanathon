/// <reference types="node" />
import { Beet } from '@metaplex-foundation/beet/dist/types/src/types';
/**
 * Converts the provided beet into a {@link FixedBeet} unless it already is.
 * The sizes for {@link FixableBeet}s are determined from the provided data.
 *
 * @param beet to convert
 * @param buf containing serialized data that the fixed beet needs to process
 * @param offset at which the data for the beet starts
 *
 * @category beet
 */
export declare function fixBeetFromData<T, V = Partial<T>>(beet: Beet<T, V>, buf: Buffer, offset: number): import("@metaplex-foundation/beet/dist/types/src/types").ScalarFixedSizeBeet<T, V> | import("@metaplex-foundation/beet/dist/types/src/types").ScalarFixedSizeBeet<T, Partial<T>>;
/**
 * Converts the provided beet into a {@link FixedBeet} unless it already is.
 * The sizes for {@link FixableBeet}s are determined from the provided value.
 *
 * @param beet to convert
 * @param val value that the fixed beet needs to process
 *
 * @category beet
 */
export declare function fixBeetFromValue<T, V = Partial<T>>(beet: Beet<T, V>, val: V): import("@metaplex-foundation/beet/dist/types/src/types").ScalarFixedSizeBeet<T, V> | import("@metaplex-foundation/beet/dist/types/src/types").ScalarFixedSizeBeet<T, Partial<T>>;
